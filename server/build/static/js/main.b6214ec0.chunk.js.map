{"version":3,"sources":["components/Header.jsx","components/ProductCard.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["axios","require","useStyles","makeStyles","theme","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","toolbar","mixins","Header","setProducts","classes","useState","searchTerm","setSearchTerm","AppBar","elevation","Toolbar","Typography","className","InputBase","placeholder","root","input","inputProps","value","onChange","event","target","onClick","get","params","then","response","data","catch","error","console","ProductCard","props","Grid","item","xs","md","lg","Card","CardMedia","component","image","image_url","alt","CardContent","gutterBottom","variant","align","price","App","products","container","map","product","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6214ec0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { InputBase } from '@material-ui/core';\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\tdisplay: 'none',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'block',\n\t\t},\n\t},\n\tsearch: {\n\t\tposition: 'relative',\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tbackgroundColor: alpha(theme.palette.common.white, 0.15),\n\t\t'&:hover': {\n\t\t  backgroundColor: alpha(theme.palette.common.white, 0.25),\n\t\t},\n\t\tmarginRight: theme.spacing(2),\n\t\tmarginLeft: 0,\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t  marginLeft: theme.spacing(3),\n\t\t  width: 'auto',\n\t\t},\n\t},\n\tsearchIcon: {\n\t\tpadding: theme.spacing(0, 2),\n\t\theight: '100%',\n\t\tposition: 'absolute',\n\t\tpointerEvents: 'none',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tinputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  toolbar: theme.mixins.toolbar\n}));\n\nexport default function Header({setProducts}) {\n\tconst classes = useStyles();\n\tconst [searchTerm, setSearchTerm] = useState('');\n\tconst handleChange = event => {\n\t\tsetSearchTerm(event.target.value);\n\t}\n\tconst handleSearch = event => {\n\t\taxios\n\t\t\t.get('/api/v1/listing', {\n\t\t\tparams: {\n\t\t\t\tsearch: searchTerm,\n\t\t\t}\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconst { data } = response.data;\n\t\t\t\tsetProducts(data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t})\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<AppBar elevation={0}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography className={classes.title}>\n\t\t\t\t\t\tEtsy x DOGE\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className={classes.search}>\n\t\t\t\t\t\t<div className={classes.searchIcon}>\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tplaceholder=\"Search in any language\"\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\troot: classes.inputRoot,\n\t\t\t\t\t\t\t\tinput: classes.inputInput,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\n\t\t\t\t\t\t\tvalue={searchTerm}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={handleSearch}>\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<div className={classes.toolbar}></div>\n\t\t\t<div className={classes.toolbar}></div>\n\t\t</div>\n\t);\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Grid from \"@mui/material/Grid\";\n\n\nexport default function ProductCard(props) {\n\treturn (\n\t\t<Grid item xs={12} md={6} lg={4}>\n\t\t\t<Card>\n\t\t\t<CardMedia\n\t\t\t\tcomponent=\"img\"\n\t\t\t\theight=\"500\"\n\t\t\t\timage={props.image_url}\n\t\t\t\talt={props.title}\n\t\t\t/>\n\t\t\t<CardContent>\n\t\t\t\t<Typography gutterBottom variant=\"body1\">\n\t\t\t\t\t{props.title}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography gutterBottom variant=\"body1\" align=\"center\">\n\t\t\t\t\t{props.price} DOGE Coins\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t\t</Card>\n        </Grid>\n\t);\n}","import React, { useState } from 'react';\nimport Grid from \"@mui/material/Grid\";\nimport Header from './components/Header';\nimport ProductCard from './components/ProductCard'\nimport './App.css';\n\nexport default function App() {\n    const [products, setProducts] = useState([]);\n\n    return (\n        <div>\n            <Header setProducts={setProducts}/>\n            <Grid container spacing={2}>\n                {products.map(product => <ProductCard {...product}/>)}\n\t\t    </Grid>\n        </div>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}